#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from ECNJY import ncTECNJY
from ECNJY.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  bool HasInit()')
    print('  string GetIp()')
    print('  ncTECNJYPwd GetCNJYPassWord()')
    print('  void SetSyncMechanism(i32 day, i32 hour, i32 min, i32 sec)')
    print('  ncTECNJYMechanism GetSyncMechanism()')
    print('  void DeltaSyncNow()')
    print('  void ScanSyncNow()')
    print('  bool SyncStatus()')
    print('  ncTECNJYProgress GetProgress()')
    print('  ncTECNJYLogSet GetMaxSyncLogs(i32 limit, i64 maxid, i32 type)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = ncTECNJY.Client(protocol)
transport.open()

if cmd == 'HasInit':
    if len(args) != 0:
        print('HasInit requires 0 args')
        sys.exit(1)
    pp.pprint(client.HasInit())

elif cmd == 'GetIp':
    if len(args) != 0:
        print('GetIp requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetIp())

elif cmd == 'GetCNJYPassWord':
    if len(args) != 0:
        print('GetCNJYPassWord requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetCNJYPassWord())

elif cmd == 'SetSyncMechanism':
    if len(args) != 4:
        print('SetSyncMechanism requires 4 args')
        sys.exit(1)
    pp.pprint(client.SetSyncMechanism(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'GetSyncMechanism':
    if len(args) != 0:
        print('GetSyncMechanism requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetSyncMechanism())

elif cmd == 'DeltaSyncNow':
    if len(args) != 0:
        print('DeltaSyncNow requires 0 args')
        sys.exit(1)
    pp.pprint(client.DeltaSyncNow())

elif cmd == 'ScanSyncNow':
    if len(args) != 0:
        print('ScanSyncNow requires 0 args')
        sys.exit(1)
    pp.pprint(client.ScanSyncNow())

elif cmd == 'SyncStatus':
    if len(args) != 0:
        print('SyncStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.SyncStatus())

elif cmd == 'GetProgress':
    if len(args) != 0:
        print('GetProgress requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetProgress())

elif cmd == 'GetMaxSyncLogs':
    if len(args) != 3:
        print('GetMaxSyncLogs requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetMaxSyncLogs(eval(args[0]), eval(args[1]), eval(args[2]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
